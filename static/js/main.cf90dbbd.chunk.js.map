{"version":3,"sources":["Components/Navbar.js","Components/Alert.js","Components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","for","Alert","alert","class","word","lower","toLowerCase","charAt","toUpperCase","slice","Capatalize","msg","Form","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newText","showAlert","newlowtext","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.cf90dbbd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from \"react-router-dom\"\r\n\r\nexport default function Navbar (props) {\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n        \r\n\r\n  <nav className={`navbar navbar-expand-lg bg-${props.mode} navbar-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/About\">About</Link>\r\n        </li> */}\r\n       \r\n     </ul>\r\n\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n  <label className=\"form-check-label mx-3\" for=\"flexSwitchCheckDefault\" >Enable Dark Mode</label>\r\n</div>\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n</div>\r\n    )\r\n}\r\n\r\n\r\nNavbar.propTypes = {\r\n\r\n\r\n  title:PropTypes.string\r\n\r\n };\r\n\r\n Navbar.defaultProps = {\r\n\r\n\r\n  title:\"Textwrong\"\r\n\r\n };","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n\r\n\r\n    const Capatalize = (word) =>{\r\n\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n  return (\r\n  \r\n      \r\n\r\n  props.alert &&    <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{ Capatalize(props.alert.type) }</strong> {props.alert.msg}\r\n</div>\r\n\r\n  )\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Form(props) {\r\n  const handleUpClick = () => {\r\n    console.log(\"uppercase was clicked\", +text);\r\n\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n\r\n    props.showAlert(\"Converted to upperCase successfully\" , \"success\")\r\n  };\r\n\r\n  const handleLowClick = () => {\r\n    let newlowtext = text.toLowerCase();\r\n\r\n    setText(newlowtext);\r\n    props.showAlert(\"Converted to LowerCase successfully\" , \"success\")\r\n\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"Text Cleared successfully\" , \"success\")\r\n\r\n  };\r\n  const handleOnChange = (event) => {\r\n    console.log(\"ON CHANGE\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    let text = document.getElementById(\"exampleFormControlTextarea1\");\r\n\r\n    text.select();\r\n\r\n    navigator.clipboard.writeText(text.value);\r\n\r\n    props.showAlert(\"Copy to clipboard successfully\" , \"success\")\r\n\r\n  };\r\n\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n\r\n    setText(newText.join(\" \"));\r\n\r\n    props.showAlert(\"Extra spaces removed successfully\" , \"success\")\r\n\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={ { color: props.mode==='light'?'black':'white'}}  >\r\n        <h1> {props.heading}</h1>\r\n\r\n        <div className=\"mb-3\">\r\n          <textarea  className=\"form-control\" value={text}  onChange={handleOnChange} style={{  backgroundColor: props.mode === \"light\" ? \"white\" : \"grey\"  }}\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"10\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>\r\n          {\" \"}\r\n          To UpperCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleLowClick}>\r\n          {\" \"}\r\n          To LowerCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>\r\n          Clear\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>\r\n          Copy\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>\r\n          Remove Extra Spaces\r\n        </button>\r\n\r\n        <h2>Summary</h2>\r\n        <p>\r\n          {text.split(\"\").length} words and {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\"\").length} Minutes to Read</p>\r\n\r\n        <h3> Preview</h3>\r\n        <p>{text.length>0?text:\"Write something to preview\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import Navbar from './Components/Navbar';\nimport Alert from './Components/Alert';\n\nimport Form from './Components/Form';\n// import About from './Components/About';\n\nimport './App.css';\n\nimport React , {useState} from 'react'\n\n\n\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Routes,\n//   Link,\n//   useRouteMatch,\n//   useParams\n// } from \"react-router-dom\";\n\nfunction App() {\n\n\n  const [mode , setMode] = useState('light')\n\n  const [alert , setAlert] = useState(null);\n\n\n\n  const showAlert = (message , type) =>{\n\n\n    setAlert({\n      msg: message,\n      type:type\n    })\n\n  }\n\n\n  setTimeout( () =>{\n\n\n    setAlert(null);\n  }, 1900)\n\n\n  const toggleMode = () =>{\n    if(mode === 'light') {\n      setMode('dark')\n\n      document.body.style.backgroundColor ='#042743' ;\n\n\n      showAlert( \"Dark Mode has been enabled\", \"success\" )\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor ='white' ;\n      showAlert( \"Light Mode has been enabled\", \"success\" )\n\n\n    }\n\n  }\n  return (\n    <>\n {/* <Router> */}\n\n\n <Navbar  mode={mode} toggleMode={toggleMode} />\n\n <Alert  alert={alert} />\n\n\n{/* <About /> */}\n\n< Form  heading=\"Enter your text\"  mode={mode} showAlert={showAlert}/>\n\n{/* <Routes>\n          <Route path=\"/about\"    element={<About/>}>\n          </Route>\n        \n          <Route path=\"/\"   element={< Form  heading=\"Enter your text\"  mode={mode} showAlert={showAlert}/>} >\n         \n\n            \n          </Route>\n        </Routes>\n\n \n </Router> */}\n  \n\n\n </>\n\n\n\n  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}